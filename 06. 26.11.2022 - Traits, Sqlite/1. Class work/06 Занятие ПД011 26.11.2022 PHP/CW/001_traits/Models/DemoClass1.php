<?php

namespace Models;

require_once "FirstTrait.php";

// пример класса с одним трейтом, в классе нет свойств
class DemoClass1
{
    // использование трейта
    // use FirstTrait;

    // использование трейта с назначением синонима методу трейта,
    // переопределенного в классе
    // FirstTrait::bar получает синоним barFirstTraite
    use FirstTrait { bar as /* private */ barFirstTrait;}

    function __construct($arr = []) {

        // добавление элементов массива $arr в коллекцию $data,
        // определенную в трейте MyTrait
        foreach($arr as $item) {
            // использование метода, определенного в трейте
            $this->addItem($item);
        } // foreach

        $this->xyz = "Это свойство, определенное в трейте";
    } // __construct

    // приоритет переопределений
    // методы трейта переопределяют унаследованные методы базового класса
    // методы класса переопределяют методы трейта
	
	// метод класса имеет то же имя, что и метод трейта
    //     метод трейта переопределяет метод базового класса
    //     метод класса переопределяет метод трейта
    // именно поэтому метод трейта переименован при объявлении использования
	// трейта
    function bar() {
        // $this->barFirstTrait() - обращение к методу, определенному в трейте по синониму
        $str = $this->barFirstTrait();
        $str .= "<h5>Привет из DemoClass1</h5>";
        return $str."DemoClass1: переопределение метода bar() трейта FirstTrate<br/>";

        // return "DemoClass1: переопределение метода bar() трейта FirstTrate<br/>";
    } // bar
} // class DemoClass1
