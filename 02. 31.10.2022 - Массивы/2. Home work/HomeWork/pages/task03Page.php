<?php
require_once "../infrastructure/layout.php";       // layout страницы
require_once "../app/task03.php";               // обработка по заданию
ob_start();     // захват контента
?>
    <section class="mx-5 my-4 bg-light shadow-sm border rounded-3 min-vh-100 p-3">
        <h4 class="text-center">Задание 2. Ассоциативные массивы</h4>

        <?php

        // Задача 3. Обработка многомерных массивов. В прямоугольной матрице выполните:
        // •	Заполнение матрицы случайными целыми числами
        // •	Вычислить сумму элементов в тех строках, которые содержат хотя бы один отрицательный элемент, вывести матрицу
        //      с этими суммами
        // •	Вычислить сумму элементов в тех столбцах, которые содержат хотя бы один положительный элемент, вывести матрицу
        //      с этими суммами
        // •	Индексы строк и столбцов всех седловых точек матрицы. Элемент матрицы Aij является седловой точкой, если он
        //      минимальный в i-й строке и максимальный в j-м столбце
        // •	Характеристикой столбца назовем сумму модулей его отрицательных нечетных элементов. Переставляя столбцы матрицы,
        //      расположить их по убыванию характеристик. Вывести матрицу и массив характеристик
        // •	Характеристикой строки назовем количество положительных четных элементов. Переставляя строки матрицы,
        //      расположить их по возрастанию характеристик. Вывести матрицу и массив характеристик
        // •	Удалить строки матрицы с минимальной и максимальной характеристиками


        // генерация массива
        $array = init();

        // исходные данные
        showArray($array, 'Исходные данные');


        // Вычислить сумму элементов в тех строках, которые содержат хотя бы один отрицательный элемент, вывести матрицу
        // с этими суммами
        $result = point01($array);

        showArray($array,
            'Вычислить сумму элементов в тех строках, которые содержат хотя бы один 
            отрицательный элемент, вывести матрицу с этими суммами',
            fn($a) => $a >= 0 ?: "bg-secondary text-white",
            $result,
            null,
        );

        // Вычислить сумму элементов в тех столбцах, которые содержат хотя бы один положительный элемент, вывести матрицу
        // с этими суммами
        $result = point02($array);

        showArray($array,
            'Вычислить сумму элементов в тех столбцах, которые содержат хотя бы один положительный элемент, вывести матрицу
            с этими суммами',
            fn($a) => $a >= 0 ?: "bg-secondary text-white",
            null,
            $result
        );

        // Индексы строк и столбцов всех седловых точек матрицы. Элемент матрицы Aij является седловой точкой, если он
        // минимальный в i-й строке и максимальный в j-м столбце
        $result = point03($array);

        showArray($array,
            'Индексы строк и столбцов всех седловых точек матрицы. Элемент матрицы Aij является седловой точкой, если он
            минимальный в i-й строке и максимальный в j-м столбце',
            null, null, null,
            '<ul>' . array_reduce($result, fn($prev, $a) => $prev . "<li>Строка: {$a["row"]}, Столбец: {$a["col"]}, Значение: {$a["value"]}</li>", '') . '</ul>'
        );

        // Характеристикой столбца назовем сумму модулей его отрицательных нечетных элементов. Переставляя столбцы матрицы,
        // расположить их по убыванию характеристик. Вывести матрицу и массив характеристик
        $result = point04($array);

        showArray($array,
            'Характеристикой столбца назовем сумму модулей его отрицательных нечетных элементов. Переставляя столбцы матрицы,
            расположить их по убыванию характеристик. Вывести матрицу и массив характеристик',
            null,
            null,
            $result
        );

        // Характеристикой строки назовем количество положительных четных элементов. Переставляя строки матрицы,
        // расположить их по возрастанию характеристик. Вывести матрицу и массив характеристик
        $result = point05($array);

        showArray($array,
            'Характеристикой строки назовем количество положительных четных элементов. Переставляя строки матрицы,
            расположить их по возрастанию характеристик. Вывести матрицу и массив характеристик',
            null, 
            $result
        );

        // Удалить строки матрицы с минимальной и максимальной характеристиками
        $result = point06($array);

        showArray($array,
            'Удалить строки матрицы с минимальной и максимальной характеристиками',
            null, $result
        );
        ?>


    </section>

<?php
$html = ob_get_clean();     // получение захваченного контента
renderLayout("task03Page", $html, "Двумерные массивы");        // рендеринг страницы с layout