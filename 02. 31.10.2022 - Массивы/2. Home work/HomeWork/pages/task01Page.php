<?php
require_once "../infrastructure/layout.php";       // layout страницы
require_once "../app/task01.php";               // обработка по заданию
ob_start();     // захват контента

$array = array();
?>
    <section class="mx-5 my-4 bg-light shadow-sm border rounded-3 min-vh-100 p-3">
        <h4 class="text-center">Задание 1. Числовые массивы</h4>
        
        <?php

        // генерация массива
        init($array, 12, random_int(2, 4));

        // исходные данные
        showArray($array, 'Исходные данные');

        // Вычислить количество элементов массива, равных нулю 
        $count = point01($array);
        showArray($array, "Вычислить количество элементов массива, равных нулю: $count",
            fn ($a) => $a !== 0 ?: "bg-secondary text-white");

        // Вычислить количество отрицательных элементов массива
        $count = point02($array);
        showArray($array, "Вычислить количество отрицательных элементов массива: $count",
            fn ($a) => $a >= 0 ?: "bg-secondary text-white");

        // Вычислить сумму элементов массива, расположенных после минимального элемента
        $sum = point03($array);
        showArray($array, sprintf("Вычислить сумму элементов массива, расположенных после минимального элемента: %.3f", $sum));

        // Вычислить сумму модулей элементов массива, расположенных после минимального по модулю элемента
        $sum = point04($array);
        showArray(
            $array,
            sprintf('Вычислить сумму модулей элементов массива, расположенных после минимального по модулю элемента: %.3f', $sum)
        );

        // Упорядочить элементы массива по возрастанию модулей
        point05($array);
        showArray($array, 'Упорядочить элементы массива по возрастанию модулей');

        // Упорядочить элементы массива по убыванию
        point06($array);
        showArray($array, 'Упорядочить элементы массива по убыванию');

        // Упорядочить элементы массива по правилу «отрицательные в начало массива»
        point07($array);
        showArray($array, 'Упорядочить элементы массива по правилу «отрицательные в начало массива» (выделены
            элементы перед заменой)',
            fn($a) => $a >= 0 ?: "bg-secondary text-white");

        // Заменить все отрицательные элементы массива их квадратами и упорядочить элементы массива по возрастанию
        point08($array);
        showArray(
            $array,
            'Заменить все отрицательные элементы массива их квадратами и упорядочить элементы массива по возрастанию'
        );

        // генерация массива
        init($array, 10);

        // исходные данные
        showArray($array, 'Новые исходные данные (выделены элементы для удаления)',
            fn($a) => $a >= 0 ?: "bg-secondary text-white");

        // Заполнить массив новым набором случайных чисел, содержащих в том числе и отрицательные значения. Вывести
        // сформированный массив. Удалить из массива все отрицательные элементы массива
        point09($array);
        showArray(
            $array,
            'Заполнить массив новым набором случайных чисел, содержащих в том числе и отрицательные значения. Вывести 
            сформированный массив. Удалить из массива все отрицательные элементы массива'
        );

        // После первого элемента и перед последними элементом массива вставить элемент со значением -ддмм,
        // где дд – цифры текущей даты, мм – цифры текущего месяца. Так, для 31 октября это будет 3110;
        // для 3 ноября - 311.
        point10($array);
        showArray(
            $array,
            'После первого элемента и перед последними элементом массива вставить элемент со значением -ддмм,
            где дд – цифры текущей даты, мм – цифры текущего месяца. Так, для 31 октября это будет 3110;
            для 3 ноября - 311.'
        );

        ?>
    </section>

<?php
$html = ob_get_clean();     // получение захваченного контента
renderLayout("task01Page", $html, "Числовые массивы");        // рендеринг страницы с layout