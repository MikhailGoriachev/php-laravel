<?php
ob_start();     // захват контента

require_once "infrastructure/SessionManager.php";

if (isset($_POST['login'])) {
    $_POST['login'] === 'in' ? SessionManager::Login() : SessionManager::Logout();
}
?>
    <section class="mx-5 my-4 bg-light shadow-sm border rounded-3 min-vh-100 p-3">
        <div>
            <button class="btn btn-outline-primary my-2" data-bs-toggle="collapse" href="#collapseTheory" role="button"
                    aria-expanded="false"
                    aria-controls="collapseTheory">
                <span class="h5">Теоретическая часть</span>
            </button>

            <div class="collapse show" id="collapseTheory">
                <ul>
                    <li>Основы работы со строками в PHP. Работа с многобайтными кодировками строк</li>
                    <li>Понятие о регулярных выражениях в PHP</li>
                    <li>Работа с куки в PHP, массив $_COOKIE, чтение и запись куки, удаление куки</li>
                    <li>Работа с сессиями в PHP, массив $_SESSION</li>
                    <li>Создание и удаление сессий, чтение и запись переменных в сессии</li>
                    <li>Введение в объектно-ориентированное программирование в PHP</li>
                    <li>Конструктор и деструктор класса</li>
                    <li>Свойства класса</li>
                    <li>Методы класса</li>
                    <li>Статические свойства и константы</li>
                    <li>Статические методы класса</li>
                    <li>Создание объектов классов, оператор new</li>
                    <li>Работа с массивами объектов</li>
                    <li>Magic-методы классов – перегруженные геттер и сеттер __get(), __set(), перегруженный вызов
                        метода __call(), формирование строкового представления объекта класса __toString()
                    </li>
                    <li>Клонирование объектов в PHP, ключевое слово clone, magic-метод __clone()</li>
                    <li>Исключения в PHP, ключевые слова try, catch, finally</li>
                    <li>Классы исключений, иерархия исключений</li>
                    <li>Собственные классы исключений</li>
            </div>
        </div>
        <!-- #endregion -->

        <!-- #region Практическая часть -->
        <div>
            <button class="btn btn-outline-primary my-2" data-bs-toggle="collapse" href="#collapsePractice"
                    role="button" aria-expanded="false"
                    aria-controls="collapsePractice">
                <span class="h5">Практическая часть</span>
            </button>

            <div class="collapse show" id="collapsePractice">
                <p>
                    Разработайте приложение с обработкой данных на PHP. На главной странице разместите это задание, на
                    других страницах – решение задачи.
                </p>

                <p>
                    Работа с приложением должна быть организована в виде сессии. В файле формата CSV хранить данные о
                    моменте начала и завершения сессии. Начало сессии – момент нажатия кнопки «Вход», окончание сессии –
                    момент нажатия кнопки «Выход». Логин и пароль не использовать. Переходы на решения задач – только
                    после начала сессии.
                </p>

                <p>
                    Доступ к функционалу приложения открывается только после создания сессии (клик по кнопке «Вход»). По
                    клику на кнопку «Выход» удаляется сессия, запрещается доступ к функционалу.
                </p>

                <!-- #region Задание 1 -->
                <p>
                    <b>Задача 1</b>. Требуется вычислять параметры плоских геометрических фигур. Параметры фигур вводить
                    в форме. Тип фигуры выбирается пользователем, при помощи радиокнопок:
                </p>

                <ul>
                    <li>Прямоугольник</li>
                    <li>Квадрат</li>
                    <li>Треугольник</li>
                </ul>

                <p>
                    Параметры фигуры для вычисления задаются чек-боксами:
                </p>

                <ul>
                    <li>площадь</li>
                    <li>периметр</li>
                </ul>

                <p>
                    Собственно вычисление выполнять при клике на кнопку "Вычислить" типа submit. Необходимые числовые
                    параметры вводить при помощи строки ввода с типом number. Сохранять исходные данные в куки, если
                    куки определены, выводить данные в поля формы из куки.
                </p>

                <p>
                    Требуется также вести журнал операций – текстовый файл, в котором записывать дату и время выполнения
                    расчета, исходные данные расчета, результаты расчета.
                </p>

                <p>
                    Предусмотрите страницу для просмотра журнала, очистки журнала.
                </p>
                <!-- #endregion -->

                <!-- #region Задание 2 -->
                <p>
                    <b>Задача 2</b>. Загружать текстовый файл в кодировке UTF-8 на сервер, папка uploaded в приложении.
                    Выводить на страницу текст из файла, а также:
                </p>

                <ul>
                    <li>только строки, содержащие двузначные числа.</li>
                    <li>только строки, не содержащие символов ".,!?:"</li>
                </ul>

                <p>
                    Выполните стилизацию приложения при помощи Bootstrap или другими наборами стилей.
                </p>
                <!-- #endregion -->

                <!-- #region Задание 3 -->
                <p>
                    <b>Задача 3</b>. Обработка файла объектов в формате CSV. Объект – класс Планета (Солнечной системы)
                    с закрытыми свойствами название, радиус, масса, количество спутников, расстояние до Солнца в а.е.,
                    фотография. Разработайте геттеры и сеттеры с выбросом исключений при не валидных данных. По кликам
                    на кнопки типа «submit» реализуйте обработки:
                </p>
                
                <ul>
                    <li>Демонстрация работы сеттеров (в том числе с не валидными данными) и геттеров – используйте генерацию данных, формы не нужны</li>
                    <li>Вывод данных из файла на страницу с упорядочиванием по расстоянию</li>
                    <li>Вывод данных из файла на страницу с упорядочиванием по алфавиту</li>
                    <li>Вывод данных из файла на страницу с упорядочиванием по массе</li>
                </ul>
                <!-- #endregion -->
            </div>
        </div>
        <!-- #endregion -->

        <!-- #region Дополнительно -->
        <div>
            <div>
                <button class="btn btn-outline-primary my-2" data-bs-toggle="collapse" href="#collapseAdditionally"
                        role="button" aria-expanded="false"
                        aria-controls="collapseAdditionally">
                    <span class="h5">Дополнительно</span>
                </button>

                <div class="collapse show" id="collapseAdditionally">
                    <p>
                        Материалы занятия – в этом же архиве. Запись занятия можно скачать <a
                                href="https://cloud.mail.ru/public/qxTE/YW6DJYg9k" target="_blank">по этой ссылке</a>.
                    </p>
                </div>
            </div>
            <!-- #endregion -->
    </section>

<?php

$htmlBody = ob_get_clean();     // получение захваченного контента
$title = "Главная";
$activeTab = "index";

require_once "infrastructure/layout.php";       // layout страницы

//renderLayout("index", $html, "Главная");        // рендеринг страницы с layout
?>